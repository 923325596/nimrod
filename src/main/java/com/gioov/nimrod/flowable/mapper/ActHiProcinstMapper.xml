<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gioov.nimrod.flowable.mapper.ActHiProcinstMapper">
    <resultMap id="BaseResultMap" type="com.gioov.nimrod.flowable.entity.ActHiProcinstEntity">
        <id column="id_" property="id_" jdbcType="VARCHAR"/> <!-- ID_ -->
        <result column="rev_" property="rev_" jdbcType="INTEGER"/> <!-- REV_ -->
        <result column="proc_inst_id_" property="procInstId_" jdbcType="VARCHAR"/> <!-- PROC_INST_ID_ -->
        <result column="business_key_" property="businessKey_" jdbcType="VARCHAR"/> <!-- BUSINESS_KEY_ -->
        <result column="proc_def_id_" property="procDefId_" jdbcType="VARCHAR"/> <!-- PROC_DEF_ID_ -->
        <result column="start_time_" property="startTime_" jdbcType="TIMESTAMP"/> <!-- START_TIME_ -->
        <result column="end_time_" property="endTime_" jdbcType="TIMESTAMP"/> <!-- END_TIME_ -->
        <result column="duration_" property="duration_" jdbcType="BIGINT"/> <!-- DURATION_ -->
        <result column="start_user_id_" property="startUserId_" jdbcType="VARCHAR"/> <!-- START_USER_ID_ -->
        <result column="start_act_id_" property="startActId_" jdbcType="VARCHAR"/> <!-- START_ACT_ID_ -->
        <result column="end_act_id_" property="endActId_" jdbcType="VARCHAR"/> <!-- END_ACT_ID_ -->
        <result column="super_process_instance_id_" property="superProcessInstanceId_" jdbcType="VARCHAR"/> <!-- SUPER_PROCESS_INSTANCE_ID_ -->
        <result column="delete_reason_" property="deleteReason_" jdbcType="VARCHAR"/> <!-- DELETE_REASON_ -->
        <result column="tenant_id_" property="tenantId_" jdbcType="VARCHAR"/> <!-- TENANT_ID_ -->
        <result column="name_" property="name_" jdbcType="VARCHAR"/> <!-- NAME_ -->
        <result column="callback_id_" property="callbackId_" jdbcType="VARCHAR"/> <!-- CALLBACK_ID_ -->
        <result column="processDefinitionKey" property="processDefinitionKey" jdbcType="VARCHAR"/> <!-- ProcessDefinitionKey -->
        <result column="processDefinitionId" property="processDefinitionId" jdbcType="VARCHAR"/> <!-- ProcessDefinitionId -->
        <result column="processDefinitionName" property="processDefinitionName" jdbcType="VARCHAR"/> <!-- ProcessDefinitionName -->
        <result column="processDefinitionVersion" property="processDefinitionVersion" jdbcType="INTEGER"/> <!-- ProcessDefinitionVersion -->
        <result column="deploymentId" property="deploymentId" jdbcType="VARCHAR"/> <!-- DeploymentId -->
    </resultMap>

    <sql id="TableName">
        `act_hi_procinst`
    </sql>

    <sql id="BaseColumnList">
        `id_`, `rev_`, `proc_inst_id_`, `business_key_`, `proc_def_id_`, `start_time_`, `end_time_`, `duration_`, `start_user_id_`, `start_act_id_`, `end_act_id_`, `super_process_instance_id_`, `delete_reason_`, `tenant_id_`, `name_`, `callback_id_`, `callback_type_`
    </sql>

    <insert id="insertOne" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.gioov.nimrod.mail.entity.MailEntity">
        INSERT INTO
        <include refid="TableName"/>
        (`id`, `status`, `from`, `to`, `subject`, `text`, `html`, `error`, `remark`, `gmt_modified`, `gmt_created`)
        VALUES (#{id}, #{status}, #{from}, #{to}, #{subject}, #{text}, #{html}, #{error}, #{remark}, #{gmtModified},
        #{gmtCreated})
    </insert>

    <update id="updateOne" keyProperty="id" parameterType="com.gioov.nimrod.mail.entity.MailEntity">
        UPDATE
        <include refid="TableName"/>
        SET `status` = #{status}, `from` = #{from}, `to` = #{to}, `subject` = #{subject}, `text` = #{text}, `html` =
        #{html}, `error` = #{error}, `remark` = #{remark}, `gmt_modified` = #{gmtModified}
        WHERE `id`= #{id}
    </update>

    <delete id="deleteOne" parameterType="long">
        DELETE FROM
        <include refid="TableName"/>
        WHERE `id` = #{id}
    </delete>

    <delete id="deleteAll">
        DELETE FROM
        <include refid="TableName"/>
        WHERE `id` IN
        (
        <foreach collection="list" item="item" index="index" separator=",">
            #{item}
        </foreach>
        )
    </delete>

    <select id="getOne" resultMap="BaseResultMap">
        SELECT
        <include refid="BaseColumnList"/>
        FROM
        <include refid="TableName"/>
        WHERE `id` = #{id} LIMIT 1
    </select>

    <select id="pageAll" resultMap="BaseResultMap" parameterType="com.gioov.common.mybatis.Pageable">
       select distinct RES.* , P.KEY_ as ProcessDefinitionKey, P.ID_ as ProcessDefinitionId, P.NAME_ as ProcessDefinitionName, P.VERSION_ as ProcessDefinitionVersion, P.DEPLOYMENT_ID_ as DeploymentId from ACT_RU_EXECUTION RES inner join ACT_RE_PROCDEF P on RES.PROC_DEF_ID_ = P.ID_ WHERE RES.PARENT_ID_ is null order by RES.ID_ asc ${pageable}
    </select>

    <select id="countAll" resultType="int">
        SELECT COUNT(1) FROM
        <include refid="TableName"/>
    </select>

    <select id="pageAllActive" resultMap="BaseResultMap" parameterType="com.gioov.common.mybatis.Pageable">
        <!--SELECT-->
        <!--<include refid="BaseColumnList"/>-->
        <!--FROM-->
        <!--<include refid="TableName"/> WHERE `end_time_` is null-->
        <!--${pageable}-->

        select distinct RES.* , P.KEY_ as ProcessDefinitionKey, P.ID_ as ProcessDefinitionId, P.NAME_ as ProcessDefinitionName, P.VERSION_ as ProcessDefinitionVersion, P.DEPLOYMENT_ID_ as DeploymentId from ACT_RU_EXECUTION RES inner join ACT_RE_PROCDEF P on RES.PROC_DEF_ID_ = P.ID_ WHERE RES.PARENT_ID_ is null and (RES.SUSPENSION_STATE_ = 1) order by RES.ID_ asc ${pageable}
    </select>

</mapper>
